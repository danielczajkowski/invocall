gsap.registerPlugin(ScrollTrigger);

const setScrollingListener = (swiper) => {
  blockScrollingApply();

  let touchStartY;
  let lastSlideChangeTime = 0;


  const handleScroll = (event) => {
    const currentTime = new Date().getTime();
    if (currentTime - lastSlideChangeTime < 1000) return;


    const isWheelEvent = 'deltaY' in event;
    const scrollAmount = isWheelEvent ? event.deltaY : event.touches[0].clientY - touchStartY;

    if (Math.abs(scrollAmount) < 100) return;

    const isScrollingUp = scrollAmount > 0;
    const removeListenerType = isWheelEvent ? 'wheel' : 'touchmove';

    if (isWheelEvent && isScrollingUp || !isWheelEvent && !isScrollingUp) {
      if(swiper.isEnd) {
        blockScrollingRemove();
        window.removeEventListener(removeListenerType, handleScroll);
      } else {
        swiper.slideNext();
        lastSlideChangeTime = currentTime;
      }
    } else {
      if(swiper.isBeginning) {
        blockScrollingRemove();
        window.removeEventListener(removeListenerType, handleScroll);
      } else {
        swiper.slidePrev();
        lastSlideChangeTime = currentTime;
      }
    }

  };

  const handleTouchStart = (event) => {
    touchStartY = event.touches[0].clientY;
  };

  window.addEventListener('wheel', handleScroll);
  window.addEventListener('touchstart', handleTouchStart);
  window.addEventListener('touchmove', handleScroll);
};



const blockScrollingApply = () => {
  const body = document.body;
  const scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;
  body.style.paddingRight = `${scrollBarWidth}px`;
  body.classList.add('no-scroll');
};

const blockScrollingRemove = () => {
  const body = document.body;
  body.style.paddingRight = '';
  body.classList.remove('no-scroll');
};

const runCarouselSlider = (elms) => {
  Array.prototype.forEach.call(elms, el => {
    const swiper = new Swiper(el, {
      loop: false,
      slidesPerView: 1,
      effect: 'fade',
      fadeEffect: {
        crossFade: true
      },
      spaceBetween: 0,
      pagination: {
        el: el.querySelector('.carousel__pagination'),
        clickable: true,
      },
    });
    changeCarouselSlides(swiper);
  });
};

const changeCarouselSlides = (swiper) => {
  const elms = document.getElementsByClassName('carousel__swiper');
  Array.prototype.forEach.call(elms, el => {
    ScrollTrigger.create({
      trigger: el,
      start: "50%-=10px 50%",
      end: "50% 50%",
      onEnter: () => {
        setScrollingListener(swiper);
      },
      onEnterBack: () => {
        setScrollingListener(swiper);
      },
    });
  });
};

document.addEventListener('DOMContentLoaded', () => {
  const elms = document.getElementsByClassName('carousel__swiper');
  runCarouselSlider(elms);
});



